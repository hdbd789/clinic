#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Clinic.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class DateDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserPK(UserPK instance);
    partial void UpdateUserPK(UserPK instance);
    partial void DeleteUserPK(UserPK instance);
    partial void InsertPatientPK(PatientPK instance);
    partial void UpdatePatientPK(PatientPK instance);
    partial void DeletePatientPK(PatientPK instance);
    partial void InsertMedicinePK(MedicinePK instance);
    partial void UpdateMedicinePK(MedicinePK instance);
    partial void DeleteMedicinePK(MedicinePK instance);
    #endregion
		
		public DateDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DateDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DateDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DateDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserPK> UserPKs
		{
			get
			{
				return this.GetTable<UserPK>();
			}
		}
		
		public System.Data.Linq.Table<ItemCalendarPK> ItemCalendarPKs
		{
			get
			{
				return this.GetTable<ItemCalendarPK>();
			}
		}
		
		public System.Data.Linq.Table<PatientPK> PatientPKs
		{
			get
			{
				return this.GetTable<PatientPK>();
			}
		}
		
		public System.Data.Linq.Table<MedicinePK> MedicinePKs
		{
			get
			{
				return this.GetTable<MedicinePK>();
			}
		}
		
		public System.Data.Linq.Table<Class1> Class1s
		{
			get
			{
				return this.GetTable<Class1>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class UserPK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdUser;
		
		private string _NameUser;
		
		private string _Password1User;
		
		private string _Password2User;
		
		private string _AuthorityUser;
		
		private string _LoginNameUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUserChanging(string value);
    partial void OnIdUserChanged();
    partial void OnNameUserChanging(string value);
    partial void OnNameUserChanged();
    partial void OnPassword1UserChanging(string value);
    partial void OnPassword1UserChanged();
    partial void OnPassword2UserChanging(string value);
    partial void OnPassword2UserChanged();
    partial void OnAuthorityUserChanging(string value);
    partial void OnAuthorityUserChanged();
    partial void OnLoginNameUserChanging(string value);
    partial void OnLoginNameUserChanged();
    #endregion
		
		public UserPK()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", CanBeNull=false, IsPrimaryKey=true)]
		public string IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameUser", CanBeNull=false)]
		public string NameUser
		{
			get
			{
				return this._NameUser;
			}
			set
			{
				if ((this._NameUser != value))
				{
					this.OnNameUserChanging(value);
					this.SendPropertyChanging();
					this._NameUser = value;
					this.SendPropertyChanged("NameUser");
					this.OnNameUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password1User", CanBeNull=false)]
		public string Password1User
		{
			get
			{
				return this._Password1User;
			}
			set
			{
				if ((this._Password1User != value))
				{
					this.OnPassword1UserChanging(value);
					this.SendPropertyChanging();
					this._Password1User = value;
					this.SendPropertyChanged("Password1User");
					this.OnPassword1UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password2User", CanBeNull=false)]
		public string Password2User
		{
			get
			{
				return this._Password2User;
			}
			set
			{
				if ((this._Password2User != value))
				{
					this.OnPassword2UserChanging(value);
					this.SendPropertyChanging();
					this._Password2User = value;
					this.SendPropertyChanged("Password2User");
					this.OnPassword2UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityUser", CanBeNull=false)]
		public string AuthorityUser
		{
			get
			{
				return this._AuthorityUser;
			}
			set
			{
				if ((this._AuthorityUser != value))
				{
					this.OnAuthorityUserChanging(value);
					this.SendPropertyChanging();
					this._AuthorityUser = value;
					this.SendPropertyChanged("AuthorityUser");
					this.OnAuthorityUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginNameUser", CanBeNull=false)]
		public string LoginNameUser
		{
			get
			{
				return this._LoginNameUser;
			}
			set
			{
				if ((this._LoginNameUser != value))
				{
					this.OnLoginNameUserChanging(value);
					this.SendPropertyChanging();
					this._LoginNameUser = value;
					this.SendPropertyChanged("LoginNameUser");
					this.OnLoginNameUserChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ItemCalendarPK
	{
		
		private string _IdUser;
		
		private string _StartTime;
		
		private string _EndTime;
		
		private string _Text;
		
		private string _Color;
		
		private string _IdPatient;
		
		public ItemCalendarPK()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", CanBeNull=false)]
		public string IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					this._IdUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", CanBeNull=false)]
		public string StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", CanBeNull=false)]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this._EndTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this._Text = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPatient", CanBeNull=false)]
		public string IdPatient
		{
			get
			{
				return this._IdPatient;
			}
			set
			{
				if ((this._IdPatient != value))
				{
					this._IdPatient = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PatientPK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdPatient;
		
		private string _NamePatient;
		
		private System.DateTime _BirthdayPatient;
		
		private string _AddressPatient;
		
		private string _HeightPatient;
		
		private string _WeightPatient;
		
		private EntitySet<MedicinePK> _MedicinePKs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPatientChanging(string value);
    partial void OnIdPatientChanged();
    partial void OnNamePatientChanging(string value);
    partial void OnNamePatientChanged();
    partial void OnBirthdayPatientChanging(System.DateTime value);
    partial void OnBirthdayPatientChanged();
    partial void OnAddressPatientChanging(string value);
    partial void OnAddressPatientChanged();
    partial void OnHeightPatientChanging(string value);
    partial void OnHeightPatientChanged();
    partial void OnWeightPatientChanging(string value);
    partial void OnWeightPatientChanged();
    #endregion
		
		public PatientPK()
		{
			this._MedicinePKs = new EntitySet<MedicinePK>(new Action<MedicinePK>(this.attach_MedicinePKs), new Action<MedicinePK>(this.detach_MedicinePKs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPatient", CanBeNull=false, IsPrimaryKey=true)]
		public string IdPatient
		{
			get
			{
				return this._IdPatient;
			}
			set
			{
				if ((this._IdPatient != value))
				{
					this.OnIdPatientChanging(value);
					this.SendPropertyChanging();
					this._IdPatient = value;
					this.SendPropertyChanged("IdPatient");
					this.OnIdPatientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamePatient", CanBeNull=false)]
		public string NamePatient
		{
			get
			{
				return this._NamePatient;
			}
			set
			{
				if ((this._NamePatient != value))
				{
					this.OnNamePatientChanging(value);
					this.SendPropertyChanging();
					this._NamePatient = value;
					this.SendPropertyChanged("NamePatient");
					this.OnNamePatientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthdayPatient")]
		public System.DateTime BirthdayPatient
		{
			get
			{
				return this._BirthdayPatient;
			}
			set
			{
				if ((this._BirthdayPatient != value))
				{
					this.OnBirthdayPatientChanging(value);
					this.SendPropertyChanging();
					this._BirthdayPatient = value;
					this.SendPropertyChanged("BirthdayPatient");
					this.OnBirthdayPatientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressPatient", CanBeNull=false)]
		public string AddressPatient
		{
			get
			{
				return this._AddressPatient;
			}
			set
			{
				if ((this._AddressPatient != value))
				{
					this.OnAddressPatientChanging(value);
					this.SendPropertyChanging();
					this._AddressPatient = value;
					this.SendPropertyChanged("AddressPatient");
					this.OnAddressPatientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeightPatient", CanBeNull=false)]
		public string HeightPatient
		{
			get
			{
				return this._HeightPatient;
			}
			set
			{
				if ((this._HeightPatient != value))
				{
					this.OnHeightPatientChanging(value);
					this.SendPropertyChanging();
					this._HeightPatient = value;
					this.SendPropertyChanged("HeightPatient");
					this.OnHeightPatientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightPatient", CanBeNull=false)]
		public string WeightPatient
		{
			get
			{
				return this._WeightPatient;
			}
			set
			{
				if ((this._WeightPatient != value))
				{
					this.OnWeightPatientChanging(value);
					this.SendPropertyChanging();
					this._WeightPatient = value;
					this.SendPropertyChanged("WeightPatient");
					this.OnWeightPatientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientPK_MedicinePK", Storage="_MedicinePKs", ThisKey="IdPatient", OtherKey="IdMedicine")]
		public EntitySet<MedicinePK> MedicinePKs
		{
			get
			{
				return this._MedicinePKs;
			}
			set
			{
				this._MedicinePKs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MedicinePKs(MedicinePK entity)
		{
			this.SendPropertyChanging();
			entity.PatientPK = this;
		}
		
		private void detach_MedicinePKs(MedicinePK entity)
		{
			this.SendPropertyChanging();
			entity.PatientPK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class MedicinePK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdMedicine;
		
		private string _NameMedicine;
		
		private string _CountMedicine;
		
		private string _CostInMedicine;
		
		private string _CostOutMedicine;
		
		private string _InputDayMedicine;
		
		private string _OutDayMedicine;
		
		private EntityRef<PatientPK> _PatientPK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMedicineChanging(string value);
    partial void OnIdMedicineChanged();
    partial void OnNameMedicineChanging(string value);
    partial void OnNameMedicineChanged();
    partial void OnCountMedicineChanging(string value);
    partial void OnCountMedicineChanged();
    partial void OnCostInMedicineChanging(string value);
    partial void OnCostInMedicineChanged();
    partial void OnCostOutMedicineChanging(string value);
    partial void OnCostOutMedicineChanged();
    partial void OnInputDayMedicineChanging(string value);
    partial void OnInputDayMedicineChanged();
    partial void OnOutDayMedicineChanging(string value);
    partial void OnOutDayMedicineChanged();
    #endregion
		
		public MedicinePK()
		{
			this._PatientPK = default(EntityRef<PatientPK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMedicine", CanBeNull=false, IsPrimaryKey=true)]
		public string IdMedicine
		{
			get
			{
				return this._IdMedicine;
			}
			set
			{
				if ((this._IdMedicine != value))
				{
					if (this._PatientPK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMedicineChanging(value);
					this.SendPropertyChanging();
					this._IdMedicine = value;
					this.SendPropertyChanged("IdMedicine");
					this.OnIdMedicineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameMedicine", CanBeNull=false)]
		public string NameMedicine
		{
			get
			{
				return this._NameMedicine;
			}
			set
			{
				if ((this._NameMedicine != value))
				{
					this.OnNameMedicineChanging(value);
					this.SendPropertyChanging();
					this._NameMedicine = value;
					this.SendPropertyChanged("NameMedicine");
					this.OnNameMedicineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountMedicine", CanBeNull=false)]
		public string CountMedicine
		{
			get
			{
				return this._CountMedicine;
			}
			set
			{
				if ((this._CountMedicine != value))
				{
					this.OnCountMedicineChanging(value);
					this.SendPropertyChanging();
					this._CountMedicine = value;
					this.SendPropertyChanged("CountMedicine");
					this.OnCountMedicineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostInMedicine", CanBeNull=false)]
		public string CostInMedicine
		{
			get
			{
				return this._CostInMedicine;
			}
			set
			{
				if ((this._CostInMedicine != value))
				{
					this.OnCostInMedicineChanging(value);
					this.SendPropertyChanging();
					this._CostInMedicine = value;
					this.SendPropertyChanged("CostInMedicine");
					this.OnCostInMedicineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostOutMedicine", CanBeNull=false)]
		public string CostOutMedicine
		{
			get
			{
				return this._CostOutMedicine;
			}
			set
			{
				if ((this._CostOutMedicine != value))
				{
					this.OnCostOutMedicineChanging(value);
					this.SendPropertyChanging();
					this._CostOutMedicine = value;
					this.SendPropertyChanged("CostOutMedicine");
					this.OnCostOutMedicineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDayMedicine", CanBeNull=false)]
		public string InputDayMedicine
		{
			get
			{
				return this._InputDayMedicine;
			}
			set
			{
				if ((this._InputDayMedicine != value))
				{
					this.OnInputDayMedicineChanging(value);
					this.SendPropertyChanging();
					this._InputDayMedicine = value;
					this.SendPropertyChanged("InputDayMedicine");
					this.OnInputDayMedicineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutDayMedicine", CanBeNull=false)]
		public string OutDayMedicine
		{
			get
			{
				return this._OutDayMedicine;
			}
			set
			{
				if ((this._OutDayMedicine != value))
				{
					this.OnOutDayMedicineChanging(value);
					this.SendPropertyChanging();
					this._OutDayMedicine = value;
					this.SendPropertyChanged("OutDayMedicine");
					this.OnOutDayMedicineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientPK_MedicinePK", Storage="_PatientPK", ThisKey="IdMedicine", OtherKey="IdPatient", IsForeignKey=true)]
		public PatientPK PatientPK
		{
			get
			{
				return this._PatientPK.Entity;
			}
			set
			{
				PatientPK previousValue = this._PatientPK.Entity;
				if (((previousValue != value) 
							|| (this._PatientPK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientPK.Entity = null;
						previousValue.MedicinePKs.Remove(this);
					}
					this._PatientPK.Entity = value;
					if ((value != null))
					{
						value.MedicinePKs.Add(this);
						this._IdMedicine = value.IdPatient;
					}
					else
					{
						this._IdMedicine = default(string);
					}
					this.SendPropertyChanged("PatientPK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Class1
	{
		
		public Class1()
		{
		}
	}
}
#pragma warning restore 1591
